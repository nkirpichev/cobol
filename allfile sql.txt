 MEMBER NAME  A
 -- LISTE DE TABLES EXISTANTES DANS LE SYSTEME
   SELECT * FROM SYSIBM.SYSTABLES
            WHERE CREATOR LIKE 'FOR%';
 MEMBER NAME  B
 --SUPPRESSION
 --DROP TABLE   FORA05.PRDT;

 -- CREATION
 --CREATE TABLE FORA05.PRDT
 --       (CODE_PRDT CHAR(4) NOT NULL,
 --        TYPE_MVT  CHAR(1),
 --        QTE_MVT   SMALLINT,
 --        PRIX      DECIMAL(5,2),
 --        PRIMARY KEY (CODE_PRDT));

 -- ALIMENTATION
 --INSERT INTO PRDT VALUES('A006','E',50,12.45);
 --INSERT INTO PRDT VALUES('D010','S',20,42.45);
 --INSERT INTO PRDT VALUES('Z111','E',30,52.45);
 --INSERT INTO PRDT VALUES('B012','S',40,62.45);
 --INSERT INTO PRDT VALUES('B005','E',50,72.45);
   INSERT INTO PRDT VALUES('B019','S',62,0.45);
   INSERT INTO PRDT VALUES('A019','S',61,822.45);
 --INSERT INTO PRDT VALUES('A000','S',60,NULL);

 -- LECTURE
 --SELECT * FROM PRDT;
 -- LECTURE 1
 --SELECT * FROM PRDT ORDER BY CODE_PRDT;
 -- LECTURE 2
 --SELECT * FROM PRDT WHERE PRIX > 50;
 -- LECTURE 3
 --SELECT * FROM PRDT WHERE QTE_MVT < 50 AND TYPE_MVT = 'S';
 -- LECTURE 4
 --SELECT TYPE_MVT, SUM(QTE_MVT) FROM PRDT GROUP BY TYPE_MVT;
 -- LECTURE 5
 --SELECT TYPE_MVT, SUM(QTE_MVT) FROM PRDT WHERE  TYPE_MVT = 'E'
 --       GROUP BY TYPE_MVT;
 -- LECTURE 6
 --SELECT COUNT(*) FROM PRDT;
 -- LECTURE 7
 --SELECT * FROM ( SELECT * FROM PRDT);
 --SELECT CODE_PRDT, MAX(PRIX) FROM PRDT
 --     GROUP BY CODE_PRDT ORDER BY MAX(PRIX) DESC ;
 --SELECT * FROM PRDT WHERE PRIX IS NULL;
   SELECT CODE_PRDT,
         CASE WHEN PRIX IS NULL THEN '*******'
                       ELSE CAST(PRIX AS CHAR(10)) END AS PRIX_C
         FROM PRDT ;
 MEMBER NAME  C
  SET SCHEMA SYSDB2;
  SELECT TITREC, TITREA FROM CHANSON C LEFT JOIN ALBUM A
       ON C.CODEA = A.CODEA
       WHERE A.CODEA IS NULL
       ORDER BY  TITREC;

  SELECT DISTINCT YEAR(DATEVENTE) FROM VENTES
       WHERE CODEA = 'A836';

  SELECT V.DATEVENTE, A.CODEA, A.TITREA, M.RAISON_SOCIALE
       FROM VENTES V JOIN ALBUM A
          ON V.CODEA = A.CODEA
          LEFT JOIN MAISON_DIST M
              ON V.SIREN = M.SIREN
       ORDER BY A.TITREA, V.DATEVENTE;

  SELECT M.SIREN, P.IDENTITE
       FROM MAISON_DIST M JOIN PERSONNE P
          ON M.CODERES = P.CODEP
       ORDER BY M.SIREN;

  SELECT P.CODEP, P.IDENTITE, SUM(DROITS) SUMD
       FROM CONTRAT C JOIN PERSONNE P
       ON C.CODEP = P.CODEP
       WHERE C.FONCTION = 'I'
       GROUP BY P.CODEP, P.IDENTITE
       ORDER BY SUMD DESC
       FETCH FIRST 1 ROW ONLY;

  SELECT C.DATESIGN, P.IDENTITE, C.FONCTION
       FROM CONTRAT C JOIN PERSONNE P
       ON C.CODEP = P.CODEP
       WHERE C.DATESIGN = ( SELECT MAX(DATESIGN)
            FROM CONTRAT );

  SELECT CODEA, SUM(QTE * PRIX) AS REVENU
       FROM VENTES
       WHERE CODEA = 'T702' AND YEAR(DATEVENTE)= 1997
       GROUP BY CODEA;

  SELECT COUNT(*)
       FROM CONCERT
       WHERE LIEU = 'PARIS' AND ANNEE BETWEEN 1992 AND 1995;

 MEMBER NAME  D
  SET SCHEMA SYSDB2;
 -- SELECT M.RAISON_SOCIALE, C.*
 --    FROM CONTRAT C  JOIN MAISON_DIST M
 --    ON C.SIREN = M.SIREN
 --    ORDER BY M.SIREN;

 SELECT SIREN, COUNT(SIREN) AS NB_CONT
      FROM CONTRAT
      GROUP BY SIREN;

  SELECT CODEA, SUM(QTE)
      FROM VENTES
      GROUP BY CODEA
      HAVING SUM(QTE) > 500;

  SELECT TITREC, TITREA
      FROM CHANSON C LEFT JOIN ALBUM A
      ON C.CODEA = A.CODEA
      ORDER BY A.CODEA;

  SELECT TITREA, TITREC
      FROM CHANSON C RIGHT JOIN ALBUM A
      ON C.CODEA = A.CODEA
      ORDER BY A.CODEA;

  SELECT TITREA, TITREC
      FROM CHANSON C FULL JOIN ALBUM A
      ON C.CODEA = A.CODEA
      ORDER BY A.CODEA;
 MEMBER NAME  F
 --INSERT INTO ALBUM VALUES ('AL01', 'TITRE AL01');
 --INSERT INTO CHANSON VALUES ('CH01', 'TITRE CH01', 'AL01');
 --UPDATE CHANSON SET TITREC = 'TITRE2 CH01' WHERE CODEC = 'CH01';
 --SELECT * FROM CHANSON;
 --UPDATE CONTRAT SET DROITS = DROITS*1.1 WHERE FONCTION = 'I';
   SELECT * FROM CONTRAT;
   DELETE FROM ALBUM WHERE CODEA='AL01';
 MEMBER NAME  E
  SELECT DISTINCT IFNULL((SELECT AVG(DROITS)
         FROM CONTRAT
         WHERE CODEP = 'P190' AND FONCTION = 'C') ,
       (SELECT AVG(DROITS)
         FROM CONTRAT
         WHERE FONCTION = 'I')) FROM CONTRAT
         ;
  SELECT DATE(TO_DATE('20231220','YYYY.MM.DD' )), CODEP FROM PERSONNE;
 MEMBER NAME  G
 --SELECT CODEA,  DATE(TO_DATE('20231231', 'YYYYMMDD'))
 --          FROM CONTRAT ORDER BY DATESIGN DESC;
 SELECT CODEA FROM ALBUM A
   WHERE  NOT EXISTS (SELECT 1 FROM CHANSON C
                WHERE C.CODEA = A.CODEA);
 MEMBER NAME  H
 --INSERT INTO QUIZ VALUES ('QU001' , 'ABABCDABCCDDABDA');
 --INSERT INTO JEU VALUES ('QU001','FORA05','16','I',10,NULL,NULL,'I');
 --SELECT * FROM QUIZ;
 --SELECT * FROM JEU_JOUEUR;
 --SELECT SOLUT, NBREM , NPOIN
 --FROM QUIZ Q JOIN JEU J ON
 --     Q.CODEJ = J.CODEJ
 --WHERE Q.CODEJ     = 'QU001';
 --DROP TABLE ASSURE;
 --DROP TABLE MVT;
 --CREATE TABLE ASSURE2
 -- ( CODEA CHAR (6) NOT NULL,
 -- NOM    CHAR (20) NOT NULL,
 -- ADRESSE    CHAR (18) NOT NULL,
 -- CODEP  CHAR (5) NOT NULL,
 -- VILLE CHAR (12) NOT NULL,
 -- TYPEM CHAR (1) NOT NULL,
 -- PRIME CHAR (6) NOT NULL,
 -- BONUS CHAR (1) NOT NULL,
 -- TAUX CHAR (2) NOT NULL,
 -- PRIMARY KEY (CODEA));
 -- DELETE   FROM ASSURE;
 SELECT * FROM FORA05.ASSURE ORDER BY CODEA;
 SELECT * FROM FORA05.MVT    ORDER BY CODEA;
 --CREATE TABLE MVT
 -- ( CODEA CHAR (6) NOT NULL,
 -- NOM    CHAR (20) NOT NULL,
 -- ADRESSE    CHAR (18) NOT NULL,
 -- CODEP  CHAR (5) NOT NULL,
 -- VILLE CHAR (12) NOT NULL,
 -- TYPEM CHAR (1) NOT NULL,
 -- PRIME CHAR (6) NOT NULL,
 -- BONUS CHAR (1) NOT NULL,
 -- TAUX CHAR (2) NOT NULL,
 -- PRIMARY KEY (CODEA));
 -- PRIMARY KEY (CODEA));
