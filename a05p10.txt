       IDENTIFICATION DIVISION.
       PROGRAM-ID. A05P10.
       AUTHOR. NIKOLAI.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT FINPUT ASSIGN TO DDINPUT
                  FILE STATUS IS FS.
           SELECT FOUTPUT ASSIGN TO DDOUTPUT
                  FILE STATUS IS FS1.
       DATA DIVISION.
       FILE SECTION.
       FD FINPUT.
       01 ENT-INPUT.
            05 E-CODE-PRDT     PIC X(4).
            05                 PIC X.
            05 E-TYPE-MVT      PIC X.
            05                 PIC X.
            05 E-CTE-MVT       PIC 9(2).
            05                 PIC X(71).
       FD FOUTPUT.
       01   ENT-OUTPUT.
            05 S-CODE-PRDT     PIC X(4).
            05                 PIC X.
            05 S-TYPE-MVT      PIC X.
            05                 PIC X.
            05 S-CTE-MVT       PIC 9(2).
            05                 PIC X.
            05 S-PRIX          PIC 999V99.
            05                 PIC X(65).
       WORKING-STORAGE SECTION.
       01 FS                   PIC 99 VALUE ZEROS.
       01 FS1                  PIC 99 VALUE ZEROS.
       01 CNT                  PIC 99 VALUE ZEROS.
       01 K                    PIC 99 VALUE ZEROS.
       01 CURRENT-EL           PIC 99 VALUE 0.
       01 CODE-TMP             PIC X(4) VALUE ZEROS.
       01                      PIC 9.
            88 FILE-READ-OK    VALUE 1.
            88 FIN-FILE        VALUE 0.
       01 PRIX-TAB.
            05 PRIX-EL OCCURS 5
                       ASCENDING KEY IS PRIX-CODE
                       INDEXED BY I.
                 10 PRIX-CODE  PIC X(4).
                 10 PRIX-VAL   PIC 999V99.
       01 TAB-PROD.
            05 TAB-PROD-EL OCCURS 10.
                 10 PROD-CODE  PIC X(4).
                 10 PROD-CNT   PIC 999      VALUE ZEROS.
                 10 PROD-STK   PIC S999     VALUE ZEROS.
                 10 PROD-PRIX  PIC 999V99   VALUE ZEROS.
       01 PRIX-VAL-S           PIC 999V99   VALUE ZEROS.
       01 PRIX-VAL-S-F         PIC ZZ9.99   VALUE ZEROS.
       01 PROD-STK-F           PIC ++9      VALUE ZEROS.
       01 DIRECTION            PIC X.
       01 PROD-PR              PIC X.
       01 PROD-NEW-PRIX        PIC 999V99   VALUE ZEROS.
       01 PROD-NEW-PRIX-F      PIC ZZ9.99   VALUE ZEROS.
       PROCEDURE DIVISION.
      *****************MAIN*****************
            PERFORM DEBUT
            PERFORM UNTIL FIN-FILE
                PERFORM LECTURE
                IF FILE-READ-OK
                     PERFORM TRAITEMENT
                END-IF
            END-PERFORM
            PERFORM FIN
            STOP RUN.
      *****************PROCEDURES**********
       DEBUT.
            OPEN INPUT FINPUT
            IF FS NOT = ZEROES
                  DISPLAY 'ERROR OPEN FILE'
                  STOP RUN
            END-IF
            SET FILE-READ-OK TO TRUE
            OPEN OUTPUT FOUTPUT
            IF FS1 NOT = ZEROES
                  DISPLAY 'ERROR OPEN FILE'
                  STOP RUN
            END-IF
            MOVE 'Z001' TO PRIX-CODE(1)
            MOVE 051.69 TO PRIX-VAL(1)
            MOVE 'A001' TO PRIX-CODE(2)
            MOVE 004.05 TO PRIX-VAL(2)
            MOVE 'A006' TO PRIX-CODE(3)
            MOVE 100.00 TO PRIX-VAL(3)
            MOVE 'D110' TO PRIX-CODE(4)
            MOVE 581.55 TO PRIX-VAL(4)
            MOVE 'R001' TO PRIX-CODE(5)
            MOVE 078.00 TO PRIX-VAL(5).
      ************ READ / WRITE *****
       TRAITEMENT.
            IF CODE-TMP NOT = E-CODE-PRDT
                 ADD 1 TO CURRENT-EL
                 MOVE E-CODE-PRDT TO PROD-CODE(CURRENT-EL)
                 MOVE 1 TO PROD-CNT(CURRENT-EL)
                 MOVE 0 TO PROD-STK(CURRENT-EL)
            ELSE
                 ADD 1 TO PROD-CNT(CURRENT-EL)
            END-IF
            IF E-TYPE-MVT = 'E'
                 ADD      E-CTE-MVT TO   PROD-STK(CURRENT-EL)
            ELSE
                 SUBTRACT E-CTE-MVT FROM PROD-STK(CURRENT-EL)
            END-IF
            MOVE E-CODE-PRDT TO CODE-TMP

            SEARCH ALL PRIX-EL
                 AT END
                     MOVE 0 TO PRIX-VAL-S
                 WHEN PRIX-CODE(I) = E-CODE-PRDT
                     MOVE PRIX-VAL(I) TO PROD-PRIX(CURRENT-EL)
            END-SEARCH
            .
       LECTURE.
            READ FINPUT
                 AT END SET FIN-FILE TO TRUE
                 NOT AT END ADD 1 TO CNT
            END-READ
            IF FS NOT = ZEROS AND FS NOT = 10
                DISPLAY 'ERROR READING'
                STOP RUN
            END-IF.
       FIN.
            DISPLAY SPACES
            DISPLAY 'PRODUIT     NUM       STOCK      OLD PRIX'
                    '     NEW PRIX'
            PERFORM VARYING K FROM 1 BY 1 UNTIL K > CURRENT-EL
                 IF PROD-STK(K) < 0
                     MOVE 'S' TO  DIRECTION
                 ELSE
                     MOVE 'E' TO  DIRECTION
                 END-IF

                 MOVE PROD-CODE(K) TO PROD-PR
                 EVALUATE PROD-PR
                     WHEN 'A' COMPUTE PROD-NEW-PRIX = PROD-PRIX(K) * 1.1
                     WHEN 'D' COMPUTE PROD-NEW-PRIX = PROD-PRIX(K) - 50
                     WHEN OTHER MOVE  PROD-PRIX(K) TO PROD-NEW-PRIX
                 END-EVALUATE

      **************DISPLAY
                 MOVE PROD-STK(K)   TO PROD-STK-F
                 MOVE PROD-PRIX(K)  TO PRIX-VAL-S-F
                 MOVE PROD-NEW-PRIX TO PROD-NEW-PRIX-F
                 DISPLAY  PROD-CODE(K) '        ' PROD-CNT(K) '       '
                          DIRECTION ' ' PROD-STK-F '        '
                          PRIX-VAL-S-F '       '
                          PROD-NEW-PRIX-F
      *          DISPLAY 'PRODUIT ' PROD-CODE(K) ' : NB = '  PROD-CNT(K)
      *                  ', QNT ' DIRECTION ' ' PROD-STK-F
      *                  ', OLD PRIX = ' PRIX-VAL-S-F
      *                  ', NEW PRIX = ' PROD-NEW-PRIX-F

      **************OUTPUT
                 MOVE PROD-CODE(K)  TO S-CODE-PRDT
                 MOVE DIRECTION     TO S-TYPE-MVT
                 MOVE PROD-CNT(K)   TO S-CTE-MVT
                 MOVE PROD-NEW-PRIX TO S-PRIX
                 WRITE ENT-OUTPUT
            END-PERFORM

            DISPLAY SPACES
            DISPLAY 'TOTAL RECORD   - ' CNT
            CLOSE FINPUT
            CLOSE FOUTPUT.
